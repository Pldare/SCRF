#!/usr/bin/env ruby -w
# encoding: UTF-8
module S加载器
  @模块名称_模块路径哈希 = {}
  def self.注册模块(模块名称, 模块路径)
    @模块名称_模块路径哈希[模块名称] = 模块路径
  end
  def self.注册并加载模块(模块名称, 模块路径)
    注册模块(模块名称, 模块路径)
    加载模块(模块名称)
  end
  def self.加载模块(输入)
    if 输入.属于?(R字符串)
      加载单个模块(输入)
    elsif 输入.属于?(R数组)
      输入.每个{|模块名称| 加载单个模块(模块名称)}
    end
  end
  def self.加载单个模块(模块名称)
    if @模块名称_模块路径哈希.含有键?(模块名称)
      加载目录(@模块名称_模块路径哈希[模块名称])
    else
      引发异常('模块加载异常',"不存在模块: #{模块名称}")
    end
  end
  def self.加载目录(目录路径)
    if (R文件.存在?(目录路径 + '/加载.rb'))
      需要 目录路径 + '/加载.rb'
    else
      S脚本加载器.加载(目录路径)
    end
  end
end
