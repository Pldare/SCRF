#!/usr/bin/env ruby -w
# encoding: UTF-8
需要 'C间隔'
class C帧数计算器
  可读属性 :计算周期, :帧数
  def 初始化(计算周期 = 30, &帧数回调)
    @计算周期, @调用次数, @帧数, @间隔实例, @帧数回调 = 计算周期, 0, 0, C间隔.新建, 帧数回调
  end
  def 进行调用;计算帧数 if (@调用次数 += 1) >= @计算周期 end
  私有方法
  def 计算帧数
    @帧数, @调用次数 = @调用次数 / @间隔实例.间隔, 0
    @帧数回调[@帧数] if @帧数回调
  end
end

描述 C帧数计算器 do
  设置(:调用次数){10}
  
  添加测试 '帧数精度测试' do
    帧数计算器 = C帧数计算器.新建(调用次数)
    消耗时间 = 耗时{调用次数.次{暂停(0.001);帧数计算器.进行调用}}
    期望(帧数计算器.帧数).接近 (调用次数 / 消耗时间), 0.2
  end
  
  添加测试 '帧数回调测试' do
    块 = -> {
      帧数计算器 = C帧数计算器.新建(5){|帧数| return 帧数 > 30}
      9999.次{暂停(0.001);帧数计算器.进行调用}
      return false
    }
    期望(块.调用).等于 true
  end
end