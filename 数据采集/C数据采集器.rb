#!/usr/bin/env ruby -w
# encoding: UTF-8
需要 'R超时'
class C数据采集器
  def 初始化(*参数范围数组, &块)
    @参数范围数组, @待采集块 = 参数范围数组, 块
  end
  def 进行采集(采集限制时间 = 300, 输出采集信息 = false, 记录消耗时间 = false)
    @采集限制时间, @采集结果 = 采集限制时间, {}
    @采集限制时间 -= 耗时{@平均消耗时间 = 获取平均消耗时间(3, @采集限制时间 / 2)}
    组合总数 = @参数范围数组.收集(&:数量).注入(&:*)
    端点组合数量 = 2**@参数范围数组.数量
    还可采集次数 = @采集限制时间 / @平均消耗时间
    输出 "平均消耗时间: #{@平均消耗时间}" if 输出采集信息
    if (还可采集次数 >= 组合总数)#采集所有输入情况的数据
      限时(@采集限制时间){R数学.笛卡尔积(*@参数范围数组){|参数数组| 单次采集(参数数组)}}
    elsif (还可采集次数 >= 端点组合数量)
      #优先采集各种端点情况下的数据, 然后根据剩下的次数进行渐进采集
      
    else
      引发异常('数据采集异常','采集时间不足')
    end
    @采集结果
  rescue E超时异常 => 超时异常
    引发异常('数据采集异常','数据采集超时')
  end
  def 获取平均消耗时间(测试次数, 限制时间)
    限时(限制时间) do
      平均消耗时间 = 测试次数.次.收集{耗时{单次采集(@参数范围数组.收集(&:取样))}}.平均值
      平均消耗时间 = (平均消耗时间 == 0 ? 0.001 : 平均消耗时间)
    end
  end
  def 单次采集(参数数组);@采集结果[参数数组] = @待采集块[*参数数组] end
end