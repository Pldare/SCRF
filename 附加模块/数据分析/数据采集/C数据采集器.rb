#!/usr/bin/env ruby -w
# encoding: UTF-8
需要 'R超时'
module M数据分析
  class C数据采集器
    def 初始化(输入数据哈希 = nil, &块);@输入数据哈希, @块 = 输入数据哈希, 块 end
    def 设置输入数据哈希(输入数据哈希);@输入数据哈希 = 输入数据哈希 end
    def 设置块(&块);@块 = 块 end
    def 进行采集(限制时间 = 60, 输出采集信息 = false, 记录耗时 = false)
      引发异常('数据采集异常','有参数未设置') unless (@输入数据哈希 && @块)
      @采集结果, @采集方式, 时间 = [], 记录耗时 ? :单次计时采集 : :单次不计时采集, R进程.单调时钟时间
      采集输入生成器 = C采集输入生成器.新建(@输入数据哈希)
      输入名称数组 = 采集输入生成器.生成输入数组.收集{|输入| 输入.名称}
      @结果类 = R结构体.新建(*输入名称数组.收集(&:符号化) + [:结果] + (记录耗时 ? [:消耗时间] : []))
      采集至超时(采集输入生成器, 限制时间)
      输出 "数据采集结束, 耗时: #{R进程.单调时钟时间 - 时间}, 共采集#{@采集结果.数量}次数据" if 输出采集信息
      return @采集结果
    end
    def 采集至超时(采集输入生成器, 限制时间)
      限时(限制时间){采集输入生成器.每个采集输入{|参数数组| 调用(@采集方式, 参数数组)}}
    rescue E超时异常
    end
    def 单次计时采集(参数数组)
      时间 = R进程.单调时钟时间
      结果 = @块[*参数数组]
      @采集结果 << @结果类.新建(*参数数组, 结果, R进程.单调时钟时间 - 时间)
    end
    def 单次不计时采集(参数数组);@采集结果 << @结果类.新建(*参数数组, @块[*参数数组]) end
  end
  
  描述 C数据采集器 do
    添加测试 '多参数数据采集测试' do
      数据集 = C数据采集器.新建(x: {范围: 1..3}, y: {范围: 4..6}, z: {范围: 7..9}){|x,y,z| x * y - z}.进行采集
      期望(数据集.数量).等于 27
      数据集.每个{|数据| 期望(数据.x * 数据.y - 数据.z).等于 数据.结果} 
    end
    
    添加测试 '采集超时测试' do
      数据集 = C数据采集器.新建(x: {范围: 1..5}){|x| 暂停(0.01)}.进行采集(0.01)
      期望(数据集.数量).不等于 5
    end
  end
end