#!/usr/bin/env ruby -w
# encoding: UTF-8
需要类 'K图表'
class K折线图 < K图表
  def 初始化(父界面 = nil, 宽 = 600, 高 = 400, p = 1.5/20)
    super(父界面, 宽, 高, true)
    @距离边框比例 = p
    @起点, @表宽, @表高 = 点(@宽*p, @高*p), @宽*(1-3*p), @高*(1-3*p)
    @折线数据集 = []
  end
  def 设置坐标范围(横坐标范围, 纵坐标范围)
    @横坐标范围, @纵坐标范围 = 横坐标范围, 纵坐标范围
    @横比例, @纵比例 = @表宽.浮点化 / 横坐标范围.差值, @表高.浮点化 / 纵坐标范围.差值
    输出 @横比例
    输出 @纵比例
  end
  def 添加折线数据(折线数据);@折线数据集 << 折线数据 end
  def 绘制横坐标(刻度数量 = 10, 刻度长 = 5)
    线段(@起点, @起点.x变动(@表宽 + @宽*(1*@距离边框比例))).箭头
    表间距, 标度间距 = @表宽 / 刻度数量, @横坐标范围.差值 / 刻度数量.浮点化
    0.至(刻度数量) do |间距数|
      刻度点 = @起点.x变动(表间距 * 间距数)
      线段(刻度点, 刻度点.y变动(刻度长))
      文本(刻度点.y变动(-10), (@横坐标范围.起点 + 标度间距 * 间距数).去零字符串)
    end
  end
  def 绘制纵坐标(刻度数量 = 8, 刻度长 = 5)
    线段(@起点, @起点.y变动(@表高 + @高*(1*@距离边框比例))).箭头
    表间距, 标度间距 = @表高 / 刻度数量, @纵坐标范围.差值 / 刻度数量.浮点化
    0.至(刻度数量) do |间距数|
      刻度点 = @起点.y变动(表间距 * 间距数)
      线段(刻度点, 刻度点.x变动(刻度长))
      文本(刻度点.x变动(-15), (@纵坐标范围.起点 + 标度间距 * 间距数).去零字符串)
    end
  end
  def 绘制折线
    @折线数据集.每个 do |折线数据|
      点集 = 折线数据.每片(2).收集 do |x, y|
        @起点.变动((x - @横坐标范围.起点) * @横比例, (y - @纵坐标范围.起点) * @纵比例)
      end
      线段(*点集)
    end
  end
  def 显示
    绘制横坐标
    绘制纵坐标
    绘制折线
    super
  end
end
